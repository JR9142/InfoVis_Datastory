Traceback (most recent call last):
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import pandas as pd
import plotly.express as px

# Load and prepare the data
police_df = pd.read_csv("europe_justice_per_100k.csv")
crime_df = pd.read_csv("europe_crime_definitive_per_100k.csv")

police_df.rename(columns={"TIME_PERIOD": "Year"}, inplace=True)
crime_df.rename(columns={"TIME_PERIOD": "Year"}, inplace=True)

# Filter and merge
police_df = police_df[["geo", "Year", "Police officers"]]
crime_df = crime_df[["geo", "Year", "Theft"]]
merged_df = pd.merge(police_df, crime_df, on=["geo", "Year"])
merged_df.dropna(subset=["Police officers", "Theft"], inplace=True)

# Melt for dual-line plotting
melted = merged_df.melt(id_vars=["geo", "Year"],
                        value_vars=["Police officers", "Theft"],
                        var_name="Metric",
                        value_name="Value")

# Get unique countries
countries = sorted(melted["geo"].unique())

# Build the Dash app
app = dash.Dash(__name__)

app.layout = html.Div([

    dcc.Dropdown(
        id='country-selector',
        options=[{'label': c, 'value': c} for c in countries],
        value=["AL"],  # Default selected
        multi=True,
        placeholder="Select one or more countries"
    ),

    dcc.Graph(id='line-chart')
])


@app.callback(
    Output('line-chart', 'figure'),
    [Input('country-selector', 'value')]
)
def update_chart(selected_countries):
    if not selected_countries:
        return px.line(title="No countries selected")

    filtered = melted[melted["geo"].isin(selected_countries)]

    # Build line plot with metric as line type, country as color
    fig = px.line(
        filtered,
        x="Year",
        y="Value",
        color="geo",
        line_dash="Metric",  # Different dash style for 'Police officers' vs 'Theft'
        markers=True,
        title="Police Officers and Theft Rate Over Time",
        labels={"geo": "Country", "Value": "Rate per 100k", "Year": "Year", "Metric": "Type"},
        height=600
    )

    fig.update_layout(yaxis=dict(autorange=True))
    return fig


if __name__ == '__main__':
    app.run(debug=True, )

------------------

----- stderr -----
Address already in use
Port 8050 is in use by another program. Either identify and stop that program, or start the server with a different port.
----- stderr -----
/home/jason/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/IPython/core/interactiveshell.py:3587: UserWarning:

To exit: use 'exit', 'quit', or Ctrl-D.
------------------

An exception has occurred, use %tb to see the full traceback.

[0;31mSystemExit[0m[0;31m:[0m 1


